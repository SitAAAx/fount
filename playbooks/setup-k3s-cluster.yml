---
# Main k3s setup playbook.

- name: "Setup a k3s single node cluster the easy way"
  hosts: "k3s"
  gather_facts: true
  roles:
  tasks:
    - name: System preparation
      block:
        - name: Update system
          ansible.builtin.apt:
            update_cache: yes
            cache_valid_time: 180
            upgrade: dist

        - name: Install dependencies
          ansible.builtin.package:
            name:
              - apt-transport-https
              - ca-certificates
              - curl
              - gnupg-agent
              - software-properties-common
            state: latest
      when: true

    - name: Kubernetes Setup
      block:
        - name: Get k3s installation script
          ansible.builtin.get_url:
            url: https://get.k3s.io
            dest: /tmp/setup_k3s.sh
            mode: 0755

        - name: Install k3s
          ansible.builtin.command: /tmp/setup_k3s.sh

        - name: Wait till node is ready
          ansible.builtin.command: "kubectl wait --for=condition=Ready nodes --all --timeout=600s"
          register: SETUP_RESULT
          until: SETUP_RESULT.rc == 0
          retries: 2
          delay: 5
      when: true

    - name: Copy Charts/Configuration - TODO (optional) copy kube.conf to local and use it
      block:
        - name: Copy configuration directory
          ansible.posix.synchronize:
            src: ../../cluster-configs/dev/k3s
            dest: /root/
            delete: yes
            recursive: yes
      when: true

    - name: Setup cert-manager
      block:
        - name: Apply namespace and cert-manager
          ansible.builtin.shell:
            "kubectl apply --dry-run=client --filename=/root/k3s/000-cluster/{{ item | basename }} && \
            kubectl apply --filename=/root/k3s/000-cluster/{{ item | basename }} && sleep 3"
          loop:
            - "../../cluster-configs/dev/k3s/000-cluster/00-namespace.yml"
            - "../../cluster-configs/dev/k3s/000-cluster/01-cert-manager-v1.2.0.yml"

        - name: Wait till cert-manager pods become ready
          ansible.builtin.command: "kubectl wait --namespace=cert-manager --for=condition=Ready pods --all --timeout=600s"
          register: CERT_MANAGER_PODS_READY_RESPONSE

        - name: Apply cluster-issuer
          ansible.builtin.shell:
            "kubectl apply --dry-run=client --filename=/root/k3s/000-cluster/{{ item | basename }} && \
            kubectl apply --filename=/root/k3s/000-cluster/{{ item | basename }} && sleep 3"
          loop:
            - "../../cluster-configs/dev/k3s/000-cluster/05-cluster-issuer.yml"
      when: true
